{"version":3,"sources":["styles/CityProfile.module.css","App.module.css","styles/AddCity.module.css","components/City.js","constants/ActionTypes.js","actions/index.js","components/AddCity.js","components/CityProfile.js","App.js","serviceWorker.js","reducers/cities.js","reducers/index.js","store.js","index.js","styles/City.module.css"],"names":["module","exports","connect","state","geopos","cities","props","data","isGeopos","deg","wind","className","styles","main","header","upperLeft","nameAndGeoWrap","name","src","alt","geoIcon","country","upperRight","weather","icon","weatherImg","temp","Object","is","undefined","Math","round","KtoC","bottom","humidity","CD","getCardinalDirection","speed","API_URL","KEY","getCitySuccess","type","payload","getCityStarted","getCityFailure","error","getCity","info","dispatch","fetch","then","response","status","Error","json","catch","err","handleClick","cityName","prompt","this","addButton","onClick","bind","CityProfile","React","useState","tomorroyData","setTomorroyData","useEffect","a","async","getFutureInformation","mainBox","to","style","textDecoration","backButton","headerWrap","tempWrap","temperature","futureWrap","weatherBox","leftWrap","text","list","date","codeMonth","currentDate","Date","currentMonth","getMonth","day","dayTxt","year","getFullYear","yearArr","String","yearCode","Number","getDay","partOfWeek","dt_txt","ids","setGeopos","navigator","geolocation","getCurrentPosition","position","coords","lat","latitude","lon","longitude","console","log","message","enableHighAccuracy","maximumAge","timeout","map","id","path","key","city","mainList","Boolean","window","location","hostname","match","initialState","loading","combineReducers","action","cityExistInList","i","length","alert","push","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55c5ba61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBox\":\"CityProfile_mainBox__1ZNQp\",\"appearence\":\"CityProfile_appearence__3qEhT\",\"backButton\":\"CityProfile_backButton__jFxK7\",\"headerWrap\":\"CityProfile_headerWrap__1audk\",\"header\":\"CityProfile_header__Hfhye\",\"tempWrap\":\"CityProfile_tempWrap__2ZtJv\",\"temperature\":\"CityProfile_temperature__3HU86\",\"futureWrap\":\"CityProfile_futureWrap__3RCJq\",\"text\":\"CityProfile_text__25DQm\",\"weatherBox\":\"CityProfile_weatherBox__2uVbc\",\"leftWrap\":\"CityProfile_leftWrap__2r23R\",\"icon\":\"CityProfile_icon__3Dh4u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainList\":\"App_mainList__SGZfi\",\"mainBox\":\"App_mainBox__1Leif\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"AddCity_addButton__1qoEJ\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../styles/City.module.css';\n\nfunction City(props) {\n\tconst { data, isGeopos } = props;\n\tconst { deg } = data.wind || '';\n\treturn (\n\t\t<div className={styles.main}>\n\t\t\t<div className={styles.header}>\n\t\t\t\t<div className={styles.upperLeft}>\n\t\t\t\t\t<div className={styles.nameAndGeoWrap}>\n\t\t\t\t\t\t<div>{data.name || ''}</div>\n\t\t\t\t\t\t{isGeopos ? (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc=\"https://image.flaticon.com/icons/png/512/117/117967.png\"\n\t\t\t\t\t\t\t\talt=\"geopos\"\n\t\t\t\t\t\t\t\tclassName={styles.geoIcon}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>{data.country || ''}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.upperRight}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\n\t\t\t\t\t\talt=\"icon\"\n\t\t\t\t\t\tclassName={styles.weatherImg}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>{`${KtoC(data.main.temp)}℃`}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={styles.bottom}>\n\t\t\t\t<div>\n\t\t\t\t\t{`Humidity ${data.main.humidity || ''}% | ${getCardinalDirection(\n\t\t\t\t\t\tdeg,\n\t\t\t\t\t)} | ${data.wind.speed || ''}m/s`}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction KtoC(temp) {\n\tif (Object.is(temp, undefined)) {\n\t\treturn '';\n\t}\n\treturn Math.round(temp - 273);\n}\n\nfunction getCardinalDirection(deg) {\n\tif (Object.is(deg, undefined)) {\n\t\treturn '';\n\t}\n\tlet CD;\n\t// eslint-disable-next-line no-mixed-operators\n\tif ((deg > 250 && deg < 360) || (deg > 0 && deg <= 45)) {\n\t\tCD = 'North';\n\t} else if (deg > 45 && deg <= 135) {\n\t\tCD = 'West';\n\t} else if (deg > 135 && deg <= 180) {\n\t\tCD = 'South';\n\t} else if (deg > 180 && deg <= 270) {\n\t\tCD = 'East';\n\t}\n\treturn CD;\n}\n\nconst mapStateToProps = function(state) {\n\treturn {\n\t\tgeopos: state.cities.geopos,\n\t};\n};\n\nexport default connect(mapStateToProps)(City);\n","export const GET_CITY_REQUEST = '@@GET_CITY_REQUEST';\nexport const GET_CITY_FAILURE = '@@GET_CITY_FAILURE';\nexport const GET_CITY_SUCCESS = '@@GET_CITY_SUCCESS';\nexport const API_URL = 'https://api.openweathermap.org';\nexport const KEY = '9fd7b573ebcf73babceccf4fedcd17d4';\n","import {\n\tGET_CITY_REQUEST,\n\tGET_CITY_FAILURE,\n\tGET_CITY_SUCCESS,\n\tAPI_URL,\n\tKEY,\n} from '../constants/ActionTypes';\n\nconst getCitySuccess = (data, geopos) => ({\n\ttype: GET_CITY_SUCCESS,\n\tpayload: data,\n\tgeopos,\n});\n\nconst getCityStarted = () => ({\n\ttype: GET_CITY_REQUEST,\n});\n\nconst getCityFailure = (error) => ({\n\ttype: GET_CITY_FAILURE,\n\tpayload: {\n\t\terror,\n\t},\n});\n\nexport function getCity(info, type) {\n\treturn (dispatch) => {\n\t\tif (type === 'name') {\n\t\t\tdispatch(getCityStarted());\n\t\t\tfetch(`${API_URL}/data/2.5/weather?q=${info}&appid=${KEY}`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\t\tthrow new Error('Not 200 response');\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn response.json();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then((data) => {\n\t\t\t\t\tdispatch(getCitySuccess(data));\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tdispatch(getCityFailure(err));\n\t\t\t\t});\n\t\t} else if (type === 'ID') {\n\t\t\tdispatch(getCityStarted());\n\t\t\tfetch(`${API_URL}/data/2.5/weather?id=${info}&appid=${KEY}`)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tdispatch(getCitySuccess(data));\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tdispatch(getCityFailure(err));\n\t\t\t\t});\n\t\t}\n\t};\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from '../styles/AddCity.module.css';\nimport { getCity } from '../actions';\n\nfunction AddCity(props) {\n\tconst { getCity } = props;\n\treturn (\n\t\t<div>\n\t\t\t<img\n\t\t\t\tsrc=\"https://image.flaticon.com/icons/png/512/1828/1828817.png\"\n\t\t\t\talt=\"add button\"\n\t\t\t\tclassName={styles.addButton}\n\t\t\t\tonClick={handleClick.bind(getCity)}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nfunction handleClick() {\n\tconst cityName = prompt('Введите имя чата: ');\n\tif (Object.is(cityName, null) || Object.is(cityName, '')) {\n\t\treturn 1;\n\t}\n\tthis(cityName, 'name');\n}\n\nconst mapStateToProps = function(state) {\n\treturn {\n\t\tdata: state.cities.cities,\n\t};\n};\n\nexport default connect(mapStateToProps, { getCity })(AddCity);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from '../styles/CityProfile.module.css';\nimport { API_URL, KEY } from '../constants/ActionTypes';\n\nexport default function CityProfile(props) {\n\tconst { data } = props;\n\tconst [tomorroyData, setTomorroyData] = React.useState(null);\n\tReact.useEffect(() => {\n\t\tgetFutureInformation(setTomorroyData, data.name);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\tif (tomorroyData !== null) {\n\t\treturn (\n\t\t\t<div className={styles.mainBox}>\n\t\t\t\t<Link to=\"/\" style={{ textDecoration: 'none' }}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"https://cdn4.iconfinder.com/data/icons/controls-add-on-flat/48/Contols_-_Add_On-29-512.png\"\n\t\t\t\t\t\talt=\"backButton\"\n\t\t\t\t\t\tclassName={styles.backButton}\n\t\t\t\t\t/>\n\t\t\t\t</Link>\n\t\t\t\t<div className={styles.headerWrap}>\n\t\t\t\t\t<div className={styles.header}>{data.name || ''}</div>\n\t\t\t\t\t<div className={styles.tempWrap}>\n\t\t\t\t\t\t<div className={styles.temperature}>\n\t\t\t\t\t\t\t{`${KtoC(data.main.temp)}℃`}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.futureWrap}>\n\t\t\t\t\t<div className={styles.weatherBox}>\n\t\t\t\t\t\t<div className={styles.leftWrap}>\n\t\t\t\t\t\t\t<div className={styles.text}>\n\t\t\t\t\t\t\t\t{`Today: ${tomorroyData.list[0].weather[0].main || ''}`}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${tomorroyData.list[0].weather[0].icon}@2x.png`}\n\t\t\t\t\t\t\t\talt=\"icon\"\n\t\t\t\t\t\t\t\tclassName={styles.icon}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{`${KtoC(tomorroyData.list[0].main.temp)}℃ / ${KtoC(\n\t\t\t\t\t\t\t\ttomorroyData.list[3].main.temp,\n\t\t\t\t\t\t\t)} ℃`}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.weatherBox}>\n\t\t\t\t\t\t<div className={styles.leftWrap}>\n\t\t\t\t\t\t\t<div>{`Tomorroy: ${tomorroyData.list[0].weather[0].main ||\n\t\t\t\t\t\t\t\t''}`}</div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${tomorroyData.list[8].weather[0].icon}@2x.png`}\n\t\t\t\t\t\t\t\talt=\"icon\"\n\t\t\t\t\t\t\t\tclassName={styles.icon}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{`${KtoC(tomorroyData.list[8].main.temp)}℃ / ${KtoC(\n\t\t\t\t\t\t\t\ttomorroyData.list[11].main.temp,\n\t\t\t\t\t\t\t)} ℃`}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.weatherBox}>\n\t\t\t\t\t\t<div className={styles.leftWrap}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{`${partOfWeek(tomorroyData.list[16].dt_txt)}: ${tomorroyData\n\t\t\t\t\t\t\t\t\t.list[0].weather[0].main || ''}`}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${tomorroyData.list[16].weather[0].icon}@2x.png`}\n\t\t\t\t\t\t\t\talt=\"icon\"\n\t\t\t\t\t\t\t\tclassName={styles.icon}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{`${KtoC(tomorroyData.list[16].main.temp)}℃ / ${KtoC(\n\t\t\t\t\t\t\t\ttomorroyData.list[19].main.temp,\n\t\t\t\t\t\t\t)} ℃`}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\treturn null;\n}\n\nfunction KtoC(temp) {\n\tif (Object.is(temp, undefined)) {\n\t\treturn '';\n\t}\n\treturn Math.round(temp - 273);\n}\n\nfunction partOfWeek(date) {\n\tif (Object.is(date, undefined)) {\n\t\treturn '';\n\t}\n\tconst currentDate = new Date(date);\n\tconst currentMonth = currentDate.getMonth();\n\tlet codeMonth;\n\tif (currentMonth === 0 || currentMonth === 9) {\n\t\tcodeMonth = 1;\n\t} else if (currentMonth === 4) {\n\t\tcodeMonth = 2;\n\t} else if (currentMonth === 7) {\n\t\tcodeMonth = 3;\n\t} else if (currentMonth === 1 || currentMonth === 2 || currentMonth === 10) {\n\t\tcodeMonth = 4;\n\t} else if (currentMonth === 5) {\n\t\tcodeMonth = 5;\n\t} else if (currentMonth === 11 || currentMonth === 9) {\n\t\tcodeMonth = 6;\n\t} else if (currentMonth === 3 || currentMonth === 6) {\n\t\tcodeMonth = 0;\n\t}\n\n\tconst year = currentDate.getFullYear();\n\tconst yearArr = String(year);\n\tconst yearCode =\n\t\t(6 +\n\t\t\tNumber(yearArr[2] + yearArr[3]) +\n\t\t\tNumber(yearArr[2] + yearArr[3]) / 4) %\n\t\t7;\n\tlet day;\n\tconst currentDay = currentDate.getDay();\n\tswitch (currentDay) {\n\t\tcase 0:\n\t\t\tday = 2;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tday = 3;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tday = 4;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tday = 5;\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tday = 6;\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tday = 0;\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tday = 1;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tday = 0;\n\t}\n\tconst dayNum = (day + codeMonth + yearCode) % 7;\n\tlet dayTxt;\n\tswitch (dayNum) {\n\t\tcase 0:\n\t\t\tdayTxt = 'Sa';\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tdayTxt = 'Su';\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tdayTxt = 'Mo';\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tdayTxt = 'Tu';\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tdayTxt = 'We';\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\tdayTxt = 'Th';\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tdayTxt = 'Fr';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tdayTxt = 'Sa';\n\t}\n\treturn dayTxt;\n}\n\nasync function getFutureInformation(setTomorroyData, name) {\n\tfetch(`${API_URL}/data/2.5/forecast?q=${name}&appid=${KEY}`)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tsetTomorroyData(data);\n\t\t});\n}\n","import React, { useState } from 'react';\nimport City from './components/City';\nimport AddCity from './components/AddCity';\nimport CityProfile from './components/CityProfile';\nimport styles from './App.module.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCity } from './actions';\nimport { API_URL, KEY } from './constants/ActionTypes';\n\nfunction App(props) {\n\tconst { getCity, data } = props;\n\tconst ids = ['1510853', '475936', '1784734'];\n\tconst [geopos, setGeopos] = useState(null);\n\tReact.useEffect(() => {\n\t\tconst geoSuccess = (position) => {\n\t\t\tlet coords = {\n\t\t\t\tlat: position.coords.latitude,\n\t\t\t\tlon: position.coords.longitude,\n\t\t\t};\n\t\t\tfetch(\n\t\t\t\t`${API_URL}/data/2.5/weather?lat=${coords.lat}&lon=${coords.lon}&appid=${KEY}`,\n\t\t\t)\n\t\t\t\t.then((response) => {\n\t\t\t\t\treturn response.json();\n\t\t\t\t})\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetGeopos(data);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t\treturn 0;\n\t\t};\n\n\t\tconst geoError = (error) => {\n\t\t\tconsole.log(error.message);\n\t\t};\n\n\t\tconst geoOptions = {\n\t\t\tenableHighAccuracy: true,\n\t\t\tmaximumAge: 30000,\n\t\t\ttimeout: 27000,\n\t\t};\n\n\t\tnavigator.geolocation.getCurrentPosition(geoSuccess, geoError, geoOptions);\n\t\tids.map((id) => {\n\t\t\tgetCity(id, 'ID');\n\t\t\treturn 0;\n\t\t});\n\t\t//eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t{geopos ? (\n\t\t\t\t\t<Route path={`/${geopos.name}`} key={geopos.key}>\n\t\t\t\t\t\t<CityProfile data={geopos} />\n\t\t\t\t\t</Route>\n\t\t\t\t) : null}\n\t\t\t\t{data.map((city) => (\n\t\t\t\t\t<Route path={`/${city.name}`} key={city.key}>\n\t\t\t\t\t\t<CityProfile data={city} />\n\t\t\t\t\t</Route>\n\t\t\t\t))}\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<div className={styles.mainBox}>\n\t\t\t\t\t\t<ul className={styles.mainList}>\n\t\t\t\t\t\t\t{geopos ? (\n\t\t\t\t\t\t\t\t<li key={geopos.id}>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={`/${geopos.name}`}\n\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'none' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<City data={geopos} isGeopos={true} />\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t{data.map((city) => (\n\t\t\t\t\t\t\t\t<li key={city.id}>\n\t\t\t\t\t\t\t\t\t<Link to={`/${city.name}`} style={{ textDecoration: 'none' }}>\n\t\t\t\t\t\t\t\t\t\t<City data={city} />\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<AddCity />\n\t\t\t\t\t</div>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nconst mapStateToProps = function(state) {\n\treturn {\n\t\tdata: state.cities.cities,\n\t};\n};\n\nexport default connect(mapStateToProps, { getCity })(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.',\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import {\n\tGET_CITY_REQUEST,\n\tGET_CITY_FAILURE,\n\tGET_CITY_SUCCESS,\n} from '../constants/ActionTypes';\n\nconst initialState = {\n\tcities: [],\n\terror: null,\n\tloading: false,\n};\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_CITY_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase GET_CITY_SUCCESS:\n\t\t\tconst cities = [...state.cities];\n\t\t\tlet cityExistInList = false;\n\t\t\tlet i = 0;\n\t\t\tif (cities.length > 0) {\n\t\t\t\twhile (!cityExistInList && i < cities.length) {\n\t\t\t\t\tif (cities[i].id === action.payload.id) {\n\t\t\t\t\t\tcityExistInList = true;\n\t\t\t\t\t\talert('Этот город уже есть в списке');\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tif (!cityExistInList) {\n\t\t\t\t\tcities.push(action.payload);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcities.push(action.payload);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tloading: false,\n\t\t\t\tcities: cities,\n\t\t\t\terror: null,\n\t\t\t};\n\t\tcase GET_CITY_FAILURE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.payload.error,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from 'redux';\nimport cities from './cities';\n\nexport default combineReducers({\n\tcities,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nexport default createStore(\n\trootReducer,\n\tcomposeWithDevTools({})(applyMiddleware(thunk)),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"City_main__2uwxY\",\"appearence\":\"City_appearence__1pv2s\",\"header\":\"City_header__27FMm\",\"bottom\":\"City_bottom__2tdAJ\",\"upperLeft\":\"City_upperLeft__D0L0N\",\"nameAndGeoWrap\":\"City_nameAndGeoWrap__A5Abi\",\"geoIcon\":\"City_geoIcon__1N60d\",\"upperRight\":\"City_upperRight__1eSb7\",\"weatherImg\":\"City_weatherImg__2ZeFO\"};"],"sourceRoot":""}